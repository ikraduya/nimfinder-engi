{"version":3,"sources":["logo.svg","commons/Header/index.js","commons/Footer/index.js","commons/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","handleLogout","state","redirect","isOpen","setState","Cookies","remove","window","location","pathname","react_default","a","createElement","react_router","to","push","Navbar","className","color","dark","expand","Container","fluid","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","React","Component","Footer","Row","Col","Layout","renderHeader","auth","commons_Header","_this2","_this$props","component","rest","objectWithoutProperties","assign","render","commons_Footer","componentList","Home","Promise","all","e","then","Register","Login","setUpLoadable","Loadable","loader","loading","lib_default","name","size","spin","App","react_router_dom","commons_Layout","path","exact","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86f6a6fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { \n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport { Link, Redirect} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n    this.state = {\n      redirect: '',\n      isOpen: false,\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  handleLogout() {\n    const cookies = new Cookies();\n    cookies.remove('token');\n    this.setState({\n      redirect: '/login'\n    })\n  }\n\n  render() {\n    const { redirect } = this.state;\n\n    if (redirect && window.location.pathname !== redirect) {\n      return <Redirect to={redirect} push />\n    }\n\n    return (\n      <Navbar className=\"mb-4\" color=\"primary\" dark expand=\"md\">\n        <Container fluid>\n          <NavbarBrand tag={Link} to=\"/\">Aromage NIMFinder</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={this.handleLogout} href=\"#\">Logout</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <div className='text-center mt-3'>\n              <p>Copyright &copy;2019 Ikraduya Edian - Jambi, Indonesia.</p>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  renderHeader(auth) {\n    if (!auth) {\n      return (<Header />);\n    }\n    return (<div className=\"my-4\"/>);\n  }\n\n  render() {\n    const { component: Component, ...rest } = this.props;\n  \n    return (\n      <Route {...rest} render={(props) => {\n        return (\n          <div>\n            {/* <Header /> */}\n            {this.renderHeader(rest.auth)}\n            <Component {...props}/>\n            <Footer />\n          </div>\n        )\n      }}/>\n    );\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport Layout from './commons/Layout';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Loadable from 'react-loadable';\n\nconst componentList = {\n  'Home': import('./components/Home'),\n  'Register': import('./components/Register'),\n  'Login': import('./components/Login'),\n};\n\nconst setUpLoadable = (component) => Loadable({\n  loader: () => componentList[component],\n  loading: () => {\n    return (\n      <FontAwesome\n        name='spinner'\n        size='4x'\n        spin\n      />\n    );\n  },\n})\n\nconst Home = setUpLoadable('Home');\nconst Register = setUpLoadable('Register');\nconst Login = setUpLoadable('Login');\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout path=\"/\" exact component={Home}/>\n      <Layout auth path=\"/register\" component={Register}/>\n      <Layout auth path=\"/login\" component={Login}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}